name: github.com/opspec-pkgs/azure.acs.create
description: creates an azure container service instance (if doesn't already exist)
inputs:
  subscriptionId:
    string:
      constraints: { minLength: 1 }
      description: id of azure subscription
  loginId:
    string:
      constraints: { minLength: 1 }
      description: id of user, service principal, or app to login with
  loginSecret:
    string:
      constraints: { minLength: 1 }
      description: secret of user, service principal, or app to login with
      isSecret: true
  name:
    string:
      constraints: { minLength: 1 }
      description: name of provisioned cluster
  resourceGroup:
    string:
      constraints: { minLength: 1 }
      description: name of azure resource group
  dnsPrefix:
    string:
      constraints: { minLength: 1, pattern: '^[a-z][a-z0-9-]{1,61}[a-z0-9]$' }
      description: domain name prefix for the cluster
  sshKeyValue:
    file:
      description: ssh key added to authorized_keys on provisioned cluster agents
  adminUsername:
    string:
      constraints: { minLength: 4, maxLength: 15 }
      description: username on provisioned virtual machines
      default: azureuser
  agentPoolName:
    string:
      constraints: { minLength: 4, maxLength: 12 }
      description: name of agent pool
  agentCount:
    number:
      constraints: { format: integer, minimum: 1 }
      description: number of cluster agents to provision
      default: 1
  agentVmSize:
    string:
      description: vm size of provisioned cluster agents
      default: Standard_D2_v2
  clientSecret:
    string:
      constraints: { minLength: 1 }
      description: client secret of azure service principal for making calls to Azure API's
      default: " "
  location:
    string:
      constraints: { minLength: 1 }
      description: location of provisioned cluster
      default: westus
  loginTenantId:
    string:
      constraints: { minLength: 1 }
      description: tenant id of user, service principal, or app to login with
      default: " "
  loginType:
    string:
      constraints: { enum: [user, sp]}
      description: type of login; 'user' (default) or 'sp' for service principal
      default: user
  masterCount:
    number:
      constraints: { format: integer, minimum: 1 }
      description: number of cluster agents to designate as masters
      default: 1
  masterVmSize:
    string:
      description: vm size of provisioned cluster masters
      default: Standard_D2_v2
  orchestratorType:
    string:
      constraints: { enum: [Custom, DCOS, Kubernetes, Swarm] }
      default: DCOS
  servicePrincipal:
    string:
      constraints: { minLength: 1 }
      description: id of azure service principal for making calls to Azure API's
      default: " "
  agentDiskSize:
    number:
      constraints: { format: integer, minimum: 1 }
      description: set disk size for agent pools vms. unit in GB
      default: 30
  agentStorageProfile:
    string:
      constraints: { enum: [ManagedDisks, StorageAccount] }
      default: " "
  agentVnetSubnetId:
    string:
      constraints: { minLength: 1 }
      description: set custom vnet subnet id for agent pools. agent need to used the same vnet if master set
      default: " "
  masterVnetSubnetId:
    string:
      constraints: { minLength: 1 }
      description: set custom vnet subnet id for master pools. agent need to used the same vnet if master set
      default: " "
  masterDiskSize:
    number:
      constraints: { format: integer, minimum: 1 }
      description: set disk size for master pool vms. unit in GB
      default: 30
  masterFirstStaticIP:
    string:
      constraints: { minLength: 1 }
      description: set the first consecutive ip used to specify static ip block
      default: " "
  mode:
    string:
      constraints: { enum: [ Incremental, Complete ] }
      description: mode of deployment; either incremental (only add resources to resource group) or complete (remove extra resources from resource group)
      default: Incremental
version: 2.1.0
run:
  serial:
    - op:
        pkg: { ref: github.com/opspec-pkgs/azure.group.create#2.0.0 }
        inputs:
          subscriptionId:
          loginId:
          loginSecret:
          location:
          name: $(resourceGroup)
          loginTenantId:
          loginType:
    - container:
        image: { ref: 'opspecpkgs/azure.acs.create:0.0.0' }
        cmd: [ /cmd.sh ]
        files: 
          /cmd.sh: /cmd.sh
          /sshKeyValue: sshKeyValue
          /clusterDefinition.json: /clusterDefinition.json
        envVars:
          subscriptionId:
          loginId:
          loginSecret:
          name:
          resourceGroup:
          mode:
          dnsPrefix:
          sshKeyValue:
          adminUsername:
          agentPoolName:
          agentCount:
          agentVmSize:
          clientSecret:
          location:
          loginTenantId:
          loginType:
          masterCount:
          masterVmSize:
          orchestratorType:
          servicePrincipal:
          agentDiskSize:
          agentStorageProfile:
          agentVnetSubnetId:
          masterVnetSubnetId:
          masterDiskSize:
          masterFirstStaticIP:
